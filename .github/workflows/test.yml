name: Tests (Pixi)

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  workflow_dispatch:

jobs:
  test-pixi:
    runs-on: ubuntu-latest
    env:
      CARGO_PROFILE_TEST_DEBUG: 0 # Disable debug info, which increases cached target size
      RUSTC_WRAPPER: sccache
      SCCACHE_CACHE_ZSTD_LEVEL: 3
      CACHE_VERSION: 1

    steps:
      # ── Check out code ──────────────────────────────────────────────────────
      - uses: actions/checkout@v4

      # ── Rust toolchain & helpers ────────────────────────────────────────────
      - name: Install cargo-nextest
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-nextest,just

      # ── Pixi environment ────────────────────────────────────────────────────
      - name: Set up pixi
        uses: prefix-dev/setup-pixi@v0.8.11
        with:
          pixi-version: v0.44.0
          activate-environment: true
          cache-write: ${{ github.ref == 'refs/heads/master' }}
          log-level: vv

     # ── Cache fixtures ───────────────────────────────────────────────────────
      - name: Cache BLAS conformance fixtures
        id: cache-fixtures
        uses: actions/cache@v4
        with:
          path: |
            ./tests/fixtures/level1
            ./tests/fixtures/level2
            ./tests/fixtures/level3
            ./tests/fixtures/matrix
          key: ${{ runner.os }}-fixtures-${{ hashFiles('./tests/conformance/**/*', 'scripts/conformance_pixi.sh') }}

      # ── Generate fixtures if needed ─────────────────────────────────────────
      - name: Generate conformance files
        if: steps.cache-fixtures.outputs.cache-hit != 'true'
        shell: bash -l {0}
        run: just gen-conform-pixi

      # ── Rust build cache  ───────────────────────────────────────────────────
      - name: Compiler caches
        uses: actions/cache@v4
        with:
          path: ~/.cache/sccache
          key: ${{ runner.os }}-sccache-v-${{ env.CACHE_VERSION }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-sccache-${{ env.CACHE_VERSION }}-

      # Note: Swatinem/rust-cache was not performant, cargo nextest will compile

      # ── Run tests ───────────────────────────────────────────────────────────
      - name: Run tests
        run: cargo nextest run --locked

version: 2

jobs:
  build:
    docker:
      - image: circleci/rust:latest
    steps:
      - checkout
      - restore_cache:
          key: project-cache
      - run:
          name: Setup
          command: |
            sudo apt-get install build-essential curl file git cmake make gfortran python-pip
            curl -o rustup-init.sh https://sh.rustup.rs
            sh rustup-init.sh -y
            rustup install nightly
            rustup install stable
      - run:
          name: json-fortran
          command: |
            pip install FoBiS.py
            git clone https://github.com/jacobwilliams/json-fortran $HOME/json-fortran
            mkdir $HOME/json-fortran/build
            cd $HOME/json-fortran/build
            cmake $HOME/json-fortran -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=$HOME/json-fortran -DCMAKE_C_FLAGS_RELEASE=-DNDEBUG -DCMAKE_CXX_FLAGS_RELEASE=-DNDEBUG -DCMAKE_FIND_FRAMEWORK=LAST -DCMAKE_VERBOSE_MAKEFILE=ON -Wno-dev -DUSE_GNU_INSTALL_CONVENTION:BOOL=TRUE -DENABLE_UNICODE:BOOL=TRUE
            make install
      - run:
          name: Conformace test
          command: |
            chmod -R a+r,a+w,a+x ./
            mkdir -p ./tests/fixtures/{level1/complex,level2/complex,level3/complex,matrix}
            sh ./scripts/conformance.sh
            cargo test --test conformance
      - run:
          name: Check formatting
          command: |
            rustup component add rustfmt
            cargo fmt --all -- --check
      - run:
          name: Nightly Build
          command: |
            rustup run nightly rustc --version --verbose
            rustup run nightly cargo --version --verbose
            rustup run nightly cargo build
      - run:
          name: Stable Build
          command: |
            rustup run stable rustc --version --verbose
            rustup run stable cargo --version --verbose
            rustup run stable cargo build
      - run:
          name: Test
          command: rustup run stable cargo test
      - run:
          name: Upload Coverage
          command: sh ./scripts/codecov.sh
      - save_cache:
          key: project-cache
          paths:
            - "~/.cargo"
            - "./target"
